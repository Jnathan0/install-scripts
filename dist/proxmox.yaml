version:
  "7.3":
    build-essential:
      default: latest
      latest:
        install: |-
          apt update 
          apt upgrade -y
          apt install -y build-essential
    deb-files:
      default: latest
      latest:
        install: |
          set -x
          echo >/etc/apt/sources.list
          echo "deb http://ftp.debian.org/debian bullseye main contrib" > /etc/apt/sources.list
          echo "deb http://ftp.debian.org/debian bullseye-updates main contrib" > /etc/apt/sources.list
          echo "deb http://security.debian.org/debian-security bullseye-security main contrib" > /etc/apt/sources.list
          echo "deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription" > /etc/apt/sources.list
          
          # comment out enterprise repo list to negate error output for updates
          sed -i -e 's/^/# /' /etc/apt/sources.list.d/pve-enterprise.list
          set +x
    iommu:
      default: latest
      latest:
        install: |
          set -x
          # Forgive me lord for these god awful one-liners
          if [ ! -z "$(grep -m 1 'vendor_id' /proc/cpuinfo | awk '{print tolower($0)}' | grep "intel")" ] ; then sed -i "s/GRUB_CMDLINE_LINUX_DEFAULT=.*/GRUB_CMDLINE_LINUX_DEFAULT=\\\"quiet intel_iommu=on\\\"/" /etc/default/grub ; fi
          if [ ! -z "$(grep -m 1 'vendor_id' /proc/cpuinfo | awk '{print tolower($0)}' | grep "amd")" ] ; then sed -i "s/GRUB_CMDLINE_LINUX_DEFAULT=.*/GRUB_CMDLINE_LINUX_DEFAULT=\\\"quiet amd_iommu=on\\\"/" /etc/default/grub ; fi

          echo -e "vfio\nvfio_iommu_type1\nvfio_pci\nvfio_virqfd" >> /etc/modules
          echo "options vfio_iommu_type1 allow_unsafe_interrupts=1" > /etc/modprobe.d/iommu_unsafe_interrupts.conf
          
          # added so windows doesnt crash
          echo "options kvm ignore_msrs=1" > /etc/modprobe.d/kvm.conf
          set +x
    templates:
      default: ubuntu-server-2044
      ubuntu-server-2044:
        install: |
          mkdir -p /cloud-init-images
          cd /cloud-init-images
          wget -nc https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64-disk-kvm.img
          qm create 9000 --name "ubuntu-server-2204-cloudinit-template" --memory 2048 --net0 virtio,bridge=vmbr0
          qm importdisk 9000 /cloud-init-images/jammy-server-cloudimg-amd64-disk-kvm.img local-lvm
          qm set 9000 --scsihw virtio-scsi-pci --scsi0 local-lvm:vm-9000-disk-0
          qm set 9000 --boot c --bootdisk scsi0
          qm set 9000 --ide2 local-lvm:cloudinit
          qm set 9000 --serial0 socket -vga serial0
          qm template 9000
    terraform-controller:
      default: latest
      latest:
        install: |
          cp files/proxmox/terraform-controller-cloud-init.yml /var/lib/vz/snippets/terraform-controller-cloud-init.yml
          qm clone 9000 10000 --full true --name terraform-controller
          qm set 10000 --cicustom "user=local:snippets/terraform-controller-cloud-init.yml" --agent enabled=1 --scsi0 local-lvm:vm-10000-disk-0 --cores 2 --onboot 1 --ipconfig0 ip=dhcp
          qm resize 10000 scsi0 +14G
          qm start 10000
    packer-controller:
      default: latest
      latest:
        install: |
          cp files/proxmox/packer-controller-cloud-init.yml /var/lib/vz/snippets/packer-controller-cloud-init.yml
          qm clone 9000 11000 --full true --name packer-controller
          qm set 11000 --cicustom "user=local:snippets/packer-controller-cloud-init.yml" --agent enabled=1 --scsi0 local-lvm:vm-11000-disk-0 --cores 2 --onboot 1 --ipconfig0 ip=dhcp
          qm resize 11000 scsi0 +14G
          qm start 11000
    go:
      default: "1.20.2"
      "1.20.2":
        install: |
          wget https://go.dev/dl/go1.20.2.linux-amd64.tar.gz
          tar -C /usr/local -xzf go1.20.2.linux-amd64.tar.gz && rm go1.20.2.linux-amd64.tar.gz
          export PATH=$PATH:/usr/local/go/bin
          echo $PATH >> /etc/profile
    terraform:
      default: "1.4.2"
      "1.4.2":
        install: |
          cd /tmp
          wget https://releases.hashicorp.com/terraform/1.4.2/terraform_1.4.2_linux_amd64.zip
          unzip terraform_1.4.2_linux_amd64.zip && rm terraform_1.4.2_linux_amd64.zip
          mv terraform /usr/local/bin/
    terraform-provider-plugin:
      default: latest
      latest:
        install: |
          git clone https://github.com/Telmate/terraform-provider-proxmox.git && cd terraform-provider-proxmox
          go install github.com/Telmate/terraform-provider-proxmox/cmd/terraform-provider-proxmox
          go install github.com/Telmate/terraform-provider-proxmox/cmd/terraform-provisioner-proxmox
          make
          mkdir ~/.terraform.d/plugins
          cp bin/terraform-provider-proxmox ~/.terraform.d/plugins
          cp bin/terraform-provisioner-proxmox ~/.terraform.d/plugins
